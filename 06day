1==>
00day  md5加密


01day-项目-商品管理-商品列表-准备组件
需求：准备商品列表页面  跟用户列表是一样的 


02day-项目-商品管理-添加商品-新建组件配置路由
点击添加按钮  实现路由跳转
@click="$router.push({name:"goodsadd"})


03day 03-项目-商品管理-添加商品-步骤条

<el-card></el-card>代替了div
成为了
<template>
  <el-card>
     
  </el-card>
</template>

02==>使用自定义组件
<my-bread value1="权限管理" value2="权限列表"></my-bread>


03==》使用Alert 警告组件
 <el-alert
    title="成功提示的文案"
    type="success"
    center
    show-icon>
  </el-alert>

04==》使用步骤条
  <!-- 使用简单风格的步骤条 -->
  :active="1"默认第一个打钩

    <el-steps :active="1" finish-status="success" simple style="margin-top: 20px">
      <el-step title="基本信息"></el-step>
      <el-step title="商品参数"></el-step>
      <el-step title="商品属性"></el-step>
      <el-step title="商品图片"></el-step>
      <el-step title="商品内容"></el-step>
    </el-steps>
  

04day-项目-商品管理-添加商品-tabs
01==>使用Tabs 标签页布局

<el-tabs class="mytab" :tab-position="tabPosition" style="height: 200px;">
      <el-tab-pane label="基本信息">用户管理</el-tab-pane>
      <el-tab-pane label="商品参数">配置管理</el-tab-pane>
      <el-tab-pane label="商品属性">角色管理</el-tab-pane>
      <el-tab-pane label="商品图片">定时任务补偿</el-tab-pane>
      <el-tab-pane label="商品内容">定时任务补偿2</el-tab-pane>
 </el-tabs>
  tabPosition: "left" //控制tab的位置



 02==>需求  当我点击tab栏中左侧的菜单时， 步骤条显示对应的步骤，并且打钩
所以要找到tab当前点击的是第几个
利用  v-model="xx" 和  <el-tab-pane name="1" label="基本信息">用户管理</el-tab-pane>中的name属性
然后将那个值  绑定到步骤条上  步骤条上的active是一个数字类型的

实现如下
  <h1>测试tab当前点击的是第几个{{myactive}}</h1>
    <el-tabs  v-model="active" class="mytab" tab-position="lef" style="height: 200px;">
      <el-tab-pane name="1" label="基本信息">用户管理</el-tab-pane>
      <el-tab-pane name="2" label="商品参数">配置管理</el-tab-pane>
      <el-tab-pane name="3" label="商品属性">角色管理</el-tab-pane>
      <el-tab-pane name="4" label="商品图片">定时任务补偿</el-tab-pane>
      <el-tab-pane name="5" label="商品内容">定时任务补偿2</el-tab-pane>
    </el-tabs>
    
    active: "1" //tab栏默认选中第一个

最后在给添加一个属性值  :active="active" 就可以实现了（动态绑定）  active的值是一个数字类型的  :active="1*active"将字符串转为数字

 <!-- 使用简单风格的步骤条 -->
    <el-steps :active="1*active" finish-status="success" simple style="margin-top: 20px">
      <el-step title="基本信息"></el-step>
      <el-step title="商品参数"></el-step>
      <el-step title="商品属性"></el-step>
      <el-step title="商品图片"></el-step>
      <el-step title="商品内容"></el-step>
    </el-steps>

05-项目-商品管理-添加商品-基本信息-表单绑定数据

需求：在tab里面添加不同的内容
老师在最外层的容器包裹了el-from  我没有

    <el-tabs v-model="active" class="mytab" tab-position="left" style="height: 400px; ">
      <!-- 第一个tab里面的内容 -->
      <el-tab-pane name="1" label="基本信息">        
        <!--  -->
        <el-form label-position="left" label-width="80px" :model="formLabelAlign1">
          <el-form-item label="商品名称">
            <el-input v-model="formLabelAlign1.goods_name"></el-input>
          </el-form-item>

          <el-form-item label="商品价格">
            <el-input v-model="formLabelAlign1.goods_price"></el-input>
          </el-form-item>

          <el-form-item label="商品重点">
            <el-input v-model="formLabelAlign1.goods_weight"></el-input>
          </el-form-item>
          <el-form-item label="商品数量">
            <el-input v-model="formLabelAlign1.goods_number"></el-input>
          </el-form-item>
        </el-form>
        <!--  -->
      </el-tab-pane>
    </el-tabs>  

06day 06-项目-商品管理-添加商品-基本信息-级联选择器-文档-引入
需求：假数据使用级联选择器

:options="options  级联选择器options是用来绑定数据的
 v-model="selectedOptions2"  selectedOptions2是一个数组 代表你选择了那些


07day 07-项目-商品管理-添加商品-基本信息-级联选择器-获取分类数据
需求:将拿到的数据渲染到练级选择器中
 expand-trigger="hover"       hover的方式触发
 :options="options"           数据源
 v-model="selectedOptions2"   你选择的数据
  @change="handleChange"      事件
  :props="defaultProp"         数据对应名陈

完成如下
    (1)获取练级选择器的数据
    async getGoodCate() {
      const res = await this.$http.get(`categories?type=3`);
      console.log("级联选择器", res);
      this.options = res.data.data;
    }

    (2)级联选择器配置
      <span class="demonstration">商品分类</span>
      <el-cascader
        expand-trigger="hover"
        :options="options"
        :props="defaultProp"
        v-model="selectedOptions2"
        @change="handleChange"
      ></el-cascader>
    

     (3)练级菜单的数据
      options: [], //练级菜单的数据
      selectedOptions2: [1, 3, 6], //默认选择 1 3 6
      defaultProp: {
        label: "cat_name", //选项名字
        value: "cat_id", //选项的id值
        children: "children" //该选项下的下一个数组
      }
    
08day(没有)
09-项目-商品管理-添加商品-商品参数-获取动态参数数据

01==>给练级菜单添加一个叉叉按钮
  <el-cascader
            clearable    //添加一个叉叉按钮
            expand-trigger="hover" 
            :options="options"
            :props="defaultProp"
            v-model="selectedOptions2"
            @change="handleChange"
          ></el-cascader>
  
02==>  给tab添加点击事件,  @tab-click="tabChange()
  <el-tabs
      @tab-click="tabChange()"
      v-model="active"
      class="mytab"
      tab-position="left"
      style="height: 400px; "
    >


03==>如果一个tab中的练级数输入不完整，提示； 完整青丘数据

  // 点击tab时触发该函数
    async tabChange() {
      console.log("hh");
      if (this.active == "2") {
        //如果点击的是第二个tab
        if (this.selectedOptions2.length !== 3) {
          this.$message.warning("请输入完整");
          return;
        } else {
          const res = await this.$http.get(
            `categories/${this.selectedOptions2[2]}/attributes?sel=many`
          );
          this.tab2arr = res.data.data;
          console.log("aa123", this.tab2arr);
        }
      }
    }

10day
把字符串变为数组 字符串item.attr_vals="aa,bb,cc,dd"
  this.tab2arr.forEach(item => {
      item.attr_vals = item.attr_vals.trim().split(",");
  });

优化后
 this.tab2arr.forEach(item => {
            item.attr_vals =
              item.attr_vals.length === 0
                ? []
                : item.attr_vals.trim().split(",");
            console.log(item.attr_vals);
          });
总结:forEach可以循环空数组


11-项目-商品管理-添加商品-商品参数-复选框组-调整样式
给它添加一个边框 border
 <el-checkbox border :label="item2" v-for="(item2,j) in item.attr_vals" :key="j"></el-checkbox>

02==》第二个tab数据渲染完成
 <!-- 第二个tab中的内容 -->
      <el-tab-pane name="2" label="商品参数">
        <div v-for="(item,i) in tab2arr" :key="i">
          <h2>{{item.attr_name}}</h2>
          <el-checkbox-group v-model="item.attr_vals">
            <el-checkbox border :label="item2" v-for="(item2,j) in item.attr_vals" :key="j"></el-checkbox>
          </el-checkbox-group>
        </div>
      </el-tab-pane>


  // 点击tab时触发该函数
    async tabChange() {
      console.log("hh");
      if (this.active == "2") {
        //如果点击的是第二个tab
        if (this.selectedOptions2.length !== 3) {
          this.$message.warning("请输入完整");
          return;
        } else {
          const res = await this.$http.get(
            `categories/${this.selectedOptions2[2]}/attributes?sel=many`
          );
          this.tab2arr = res.data.data;
          console.log("aa123", this.tab2arr);

          // 将字符串转为数组
          // this.tab2arr.forEach(item => {
          //   item.attr_vals = item.attr_vals.trim().split(",");
          // });

          // 优化
          this.tab2arr.forEach(item => {
            item.attr_vals =
              item.attr_vals.length === 0
                ? []
                : item.attr_vals.trim().split(",");
            console.log(item.attr_vals);
          });
        }
      }
    }



12-项目-商品管理-添加商品-商品属性-获取静态参数数据

获取第三个tab的数据
 else if (this.active == "3") {
        //如果点击的是第三个tab栏
        if (this.selectedOptions2.length !== 3) {
          this.$message.warning("请输入完整");
          return;
        } else {
          const res = await this.$http.get(
            `categories/${this.selectedOptions2[2]}/attributes?sel=only`
          this.tab3arr=res.data.data; 
          );
        
        }
      }

13day
13-项目-商品管理-添加商品-商品参数-布局数据渲染
   <!-- 第三个tab中的内容 -->
      <el-tab-pane name="3" label="商品属性">
        <el-form label-position="left" label-width="80px">
          <el-form-item :label="item.attr_name" v-for="(item,i) in tab3arr" :key="i">
            <el-input v-model="item.attr_vals"></el-input>
          </el-form-item>
        </el-form>
      </el-tab-pane>


   else if (this.active == "3") {
        //如果点击的是第三个tab栏
        if (this.selectedOptions2.length !== 3) {
          this.$message.warning("请输入完整");
          return;
        } else {
          const res3 = await this.$http.get(
            `categories/${this.selectedOptions2[2]}/attributes?sel=only`
          );

          this.tab3arr = res3.data.data;
          console.log("123", this.tab3arr);
        }
      }


 15-项目-商品管理-添加商品-图片上传-配置属性-临时路径         

 图片上传的全路径
 action="http://api.xiaomadagege.cn:3001/api/private/v1/opload"
 headers	设置上传的请求头部	object

   <!--第四个 tab中的内容 -->
      <el-tab-pane name="4" label="商品图片">
        <el-upload
          class="upload-demo"
          action="http://api.xiaomadagege.cn:3001/api/private/v1/opload"
          :headers="headers"
          :on-preview="handlePreview"
          :on-success="handleSuccess"
          :on-remove="handleRemove"
          list-type="picture"
        >
          <el-button size="small" type="primary">点击上传</el-button>
          <div slot="tip" class="el-upload__tip">只能上传jpg/png文件，且不超过500kb</div>
        </el-upload>
      </el-tab-pane>
    
      headers: {
        Authorization: localStorage.getItem("token")
      }

   
    // 图片预览的时候 调用该方法
    // file当前操作图片的相关信息
    handlePreview(file) {
      console.log(file);
    },

    // 图片点击×的时候调用
    handleRemove(file) {
      console.log(file);
    },

    // 图片上传成功的时候调用
    handleSuccess(file) {
      console.log("成功");
      console.log("成功的第一个canshu", file);
    },
  
  
  
16-项目-商品管理-添加商品-商品内容-富文本编辑器
当你找插件的时候  你可以去vue官方文档中  生态系统  vue资源中去找 
cnpm install vue-quill-editor --save

17-项目-商品管理-添加商品-表单数据分析

18-项目-商品管理-添加商品-表单数据处理-分类和图片


二、多光标
1、按住alt，用鼠标左键点击，可以出现多个光标，输入的代码可以在光标处同时增加。
https://blog.csdn.net/Gomeer/article/details/91417928
